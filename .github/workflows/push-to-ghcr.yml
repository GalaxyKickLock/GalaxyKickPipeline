name: Push Docker Image to GHCR

on:
  workflow_dispatch: # Allows manual triggering
  push:
    branches:
      - main # Optional: Trigger on push to main branch
    paths:
      - 'Dockerfile' # Optional: Trigger only if Dockerfile changes
      # Add other paths relevant to your Docker build context if needed

env:
  # Define the image name on GHCR.
  # Uses the GitHub organization/user name automatically.
  # Format: ghcr.io/OWNER/IMAGE_NAME
  IMAGE_NAME: ${{ github.repository_owner }}/galaxykick

jobs:
  build_and_push:
    name: Build and Push Image
    runs-on: ubuntu-latest

    # Grant GITHUB_TOKEN permissions to write Packages
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          # GITHUB_TOKEN is a temporary token provided by Actions runner
          # It has permissions defined in the 'permissions' block above
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          # Define tags - here we explicitly use 'v100' and 'latest'
          # You can add more logic based on git refs, etc.
          tags: |
            type=raw,value=v100
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }} # Add latest tag only if on main branch

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: . # Assumes Dockerfile is at the root
          push: true # Push the image
          tags: ${{ steps.meta.outputs.tags }} # Use tags generated by metadata-action
          labels: ${{ steps.meta.outputs.labels }} # Add labels generated by metadata-action
          cache-from: type=gha # Enable build cache from GitHub Actions cache
          cache-to: type=gha,mode=max # Save build cache to GitHub Actions cache

      - name: Image Digest Output
        run: echo "Pushed image digest: ${{ steps.build-and-push.outputs.digest }}"
