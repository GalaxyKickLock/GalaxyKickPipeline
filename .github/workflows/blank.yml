```yaml
name: Build & Expose

# Allow manual dispatch and reusable calls
on:
  workflow_dispatch:
    inputs:
      username:
        description: 'Username to use as subdomain'
        required: true
        type: string
  workflow_call:
    inputs:
      username:
        type: string
        required: true

# Hardcode image version
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/galaxykick
  IMAGE_TAG: v100

jobs:
  build:
    name: Build & Push (if new)
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check.outputs.exists }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - id: check
        name: Check GHCR for existing image
        run: |
          if curl --silent -u "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" \
               "https://ghcr.io/v2/${{ github.repository_owner }}/galaxykick/manifests/${{ env.IMAGE_TAG }}" \
             >/dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Login to GHCR
        if: ${{ steps.check.outputs.exists == 'false' }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Buildx
        if: ${{ steps.check.outputs.exists == 'false' }}
        uses: docker/setup-buildx-action@v2

      - name: Build & Push Image
        if: ${{ steps.check.outputs.exists == 'false' }}
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Skip Build
        if: ${{ steps.check.outputs.exists == 'true' }}
        run: echo "Image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} already exists. Skipping build."

  expose:
    name: Expose via LocalTunnel
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      PORT: 7860
      IMAGE_NAME: ${{ env.IMAGE_NAME }}
      IMAGE_TAG: ${{ env.IMAGE_TAG }}
      USERNAME: ${{ inputs.username || github.event.inputs.username }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull & Run Docker Container
        run: |
          if ! docker image inspect $IMAGE_NAME:$IMAGE_TAG &>/dev/null; then
            echo "Pulling $IMAGE_NAME:$IMAGE_TAG from GHCR..."
            docker pull $IMAGE_NAME:$IMAGE_TAG
          else
            echo "Using locally cached image."
          fi

          docker run -d \
            --name galaxykick \
            -p $PORT:$PORT \
            $IMAGE_NAME:$IMAGE_TAG

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Start LocalTunnel
        run: |
          npm install -g localtunnel
          echo "Starting LocalTunnel with subdomain: $USERNAME"
          npx localtunnel --port $PORT --subdomain $USERNAME
```
