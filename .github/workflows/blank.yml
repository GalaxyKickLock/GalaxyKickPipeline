name: Build & Expose

# Allow manual dispatch and reusable calls
on:
  workflow_dispatch:
    inputs:
      username:
        description: 'Username to use as subdomain'
        required: true
        type: string
  workflow_call:
    inputs:
      username:
        type: string
        required: true

# Define image source
env:
  IMAGE_NAME: bharanidharan/galaxykick
  IMAGE_TAG: v100

jobs:
  expose:
    name: Expose via LocalTunnel
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Setup Docker Layer Caching
        uses: actions/cache@v3
        with:
          path: /var/lib/docker
          key: docker-layers-${{ env.IMAGE_NAME }}-${{ env.IMAGE_TAG }}
          restore-keys: |
            docker-layers-${{ env.IMAGE_NAME }}-

      - name: Pull Docker image (if not cached)
        id: pull-image
        run: |
          # Check if image already exists locally
          if docker image inspect ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} &>/dev/null; then
            echo "Using cached image ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
            echo "cached=true" >> $GITHUB_OUTPUT
          else
            echo "Pulling ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} from Docker Hub..."
            docker pull ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            echo "cached=false" >> $GITHUB_OUTPUT
          fi

      - name: Run Docker Container
        env:
          PORT: 7860
          USERNAME: ${{ inputs.username || github.event.inputs.username }}
        run: |
          echo "Starting container from ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
          
          docker run -d \
            --name galaxykick \
            -p $PORT:$PORT \
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          
          echo "Container started successfully"

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Start LocalTunnel
        env:
          PORT: 7860
          USERNAME: ${{ inputs.username || github.event.inputs.username }}
        run: |
          npm install -g localtunnel
          echo "Starting LocalTunnel with subdomain: $USERNAME"
          npx localtunnel --port $PORT --subdomain $USERNAME
